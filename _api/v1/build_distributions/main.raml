/subset:
  post:
    description: |
      Endpoint expects a list of all test files in your test suite.

      In response, you will get a list of test files that should be run on a node with particular **node_index** value.

      You will get also **build_distribution_id** (seed) to compare if all your CI nodes are running based on the same test suite split.

    headers: !include ../headers/default.raml

    body:
      application/json:
        type: !include schema/subset/post.json

    queryParameters:
      fixed_test_suite_split: !include ../params/fixed_test_suite_split.raml
      cache_read_attempt: !include ../params/cache_read_attempt.raml
      commit_hash: !include ../params/commit_hash.raml
      branch: !include ../params/branch.raml
      node_total: !include ../params/node_total.raml
      node_index: !include ../params/node_index.raml
      ci_build_id: !include ../params/ci_build_id.raml
      user_seat: !include ../params/user_seat.raml
      test_files: !include ../params/test_files_with_path_only.raml
      build_author: !include ../params/build_author.raml
      commit_authors: !include ../params/commit_authors.raml

    responses:
      200:
        body:
          application/json:
            example: !include schema/subset/response_200.json

/last:
  get:
    description: |
      This endpoint returns a list of test files recorded for CI build that closely matches given params like **commit_hash**, **branch**, **node_total**.

      If test files include paths to test cases then you need to merge them on your client-side to determine what test files are slow.

      You need to verify if the test files still exist on your disk before running tests.

      You can use the list of test files to determine what test files are slow and could be split by test cases.

      knapsack_pro gem uses this API endpoint to [split slow test files by test cases](https://docs.knapsackpro.com/ruby/split-by-test-examples/).

    headers: !include ../headers/default.raml

    queryParameters:
      commit_hash: !include ../params/commit_hash.raml
      branch: !include ../params/branch.raml
      node_total: !include ../params/node_total.raml
      node_index: !include ../params/node_index.raml

    responses:
      200:
        body:
          application/json:
            example: !include schema/last/get_response_200.json
