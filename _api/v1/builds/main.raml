get:
  description: |
    Get list of all CI builds you have run. Array of CI builds is inside of **data** key.

    There are also available pagination urls in **links** key so you can easily get CI builds for next page.
    Key **meta** contains basic info about current CI builds page.

    ---

    You can provide optional query params to filter list of CI builds by **commit_hash**, **branch**, **node_total**.

    Example 1: /v1/builds?page=1&branch=main&node_total=2

    Example 2: /v1/builds?page=1&commit_hash=d1acb81ac1bead703eb6de64d1af24104d5d4b2c

    ---

    CI build means unique combination of **commit_hash**, **branch**, **node_total**.

    You can use **id** of the build to fetch detailed info about tests recorded for that CI build by doing request to **/v1/builds/:id** endpoint.

  headers: !include ../headers/test_suite_token.raml

  queryParameters:
    commit_hash: !include ../params/filters/commit_hash.raml
    branch: !include ../params/filters/branch.raml
    node_total: !include ../params/filters/node_total.raml

  responses:
    200:
      body:
        application/json:
          example: !include schema/index/response_200.json

/:id:
  get:
    description: |
      Get detailed info about CI build with all build subsets containing the test files recorded timing for that CI build.

      Note the CI build means unique combination of **commit_hash**, **branch**, **node_total**.
      If you will run your tests multiple times for that combination then you will get multiple recorded build subset records with test files timing for particular CI node indexes.

    headers: !include ../headers/test_suite_token.raml

    responses:
      200:
        body:
          application/json:
            example: !include schema/show/response_200.json
      404:
        body:
          application/json:
            example: !include schema/show/error_404.json
