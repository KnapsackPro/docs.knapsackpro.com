"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[694],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||s;return a?n.createElement(f,o(o({ref:t},u),{},{components:a})):n.createElement(f,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},631:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const s={pagination_next:null,pagination_prev:null},o="Use Knapsack Pro with RSpec",i={unversionedId:"ruby/rspec",id:"ruby/rspec",title:"Use Knapsack Pro with RSpec",description:"Retry failed/flaky tests",source:"@site/docs/ruby/rspec.md",sourceDirName:"ruby",slug:"/ruby/rspec",permalink:"/ruby/rspec",draft:!1,editUrl:"https://github.com/KnapsackPro/docs.knapsackpro.com/tree/main/docusaurus/docs/ruby/rspec.md",tags:[],version:"current",frontMatter:{pagination_next:null,pagination_prev:null},sidebar:"sidebar"},l={},p=[{value:"Retry failed/flaky tests",id:"retry-failedflaky-tests",level:2},{value:"<code>--fail-fast</code>",id:"--fail-fast",level:2},{value:"Run a subset of tests",id:"run-a-subset-of-tests",level:2},{value:"Parallelize test examples (instead of files)",id:"parallelize-test-examples-instead-of-files",level:2},{value:"Formatters (<code>rspec_junit_formatter</code>, <code>json</code>)",id:"formatters-rspec_junit_formatter-json",level:2},{value:"Regular Mode",id:"regular-mode",level:3},{value:"Queue Mode",id:"queue-mode",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Some of my test files are not executed",id:"some-of-my-test-files-are-not-executed",level:3},{value:"Some tests are failing in Queue Mode",id:"some-tests-are-failing-in-queue-mode",level:3},{value:"<code>.rspec</code> is ignored in Queue Mode",id:"rspec-is-ignored-in-queue-mode",level:3},{value:"Something is wrong with my custom formatter",id:"something-is-wrong-with-my-custom-formatter",level:3},{value:"I see the summary of failed/pending tests multiple times in Queue Mode",id:"i-see-the-summary-of-failedpending-tests-multiple-times-in-queue-mode",level:3},{value:"<code>TypeError: superclass mismatch for class MyClass</code> in Queue Mode",id:"typeerror-superclass-mismatch-for-class-myclass-in-queue-mode",level:3},{value:"My tests fail in Queue Mode",id:"my-tests-fail-in-queue-mode",level:3},{value:"Related FAQs",id:"related-faqs",level:2}],u={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-knapsack-pro-with-rspec"},"Use Knapsack Pro with RSpec"),(0,r.kt)("h2",{id:"retry-failedflaky-tests"},"Retry failed/flaky tests"),(0,r.kt)("p",null,"You have a couple of options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NoRedInk/rspec-retry"},"rspec-retry")," (recommended)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://relishapp.com/rspec/rspec-core/docs/command-line/only-failures"},"RSpec's ",(0,r.kt)("inlineCode",{parentName:"a"},"--only-failures")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bundle exec rake knapsack_pro:queue:rspec\nbundle exec rspec --only-failures\n")))),(0,r.kt)("h2",{id:"--fail-fast"},(0,r.kt)("inlineCode",{parentName:"h2"},"--fail-fast")),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("a",{parentName:"p",href:"/ruby/reference/#command-line-arguments"},"Rake argument syntax")," to fail fast:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Stop when 1 test failed\nbundle exec rake "knapsack_pro:queue:rspec[--fail-fast]"\n\n# Stop when 3 tests failed\nbundle exec rake "knapsack_pro:queue:rspec[--fail-fast 3]"\n')),(0,r.kt)("h2",{id:"run-a-subset-of-tests"},"Run a subset of tests"),(0,r.kt)("p",null,"To run a subset of your test suite you have a couple of options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KNAPSACK_PRO_TEST_FILE_*")," ",(0,r.kt)("a",{parentName:"li",href:"/ruby/reference/"},"environment variables")," (recommended)"),(0,r.kt)("li",{parentName:"ul"},"RSpec's ",(0,r.kt)("inlineCode",{parentName:"li"},"--tag MY_TAG"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--tag ~MY_TAG"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"--tag type:feature"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"--tag ~type:feature"))),(0,r.kt)("p",null,"If you are seeking faster performance on your CI, you may want to read ",(0,r.kt)("a",{parentName:"p",href:"#parallelize-test-examples-instead-of-files"},"Parallelize test examples (instead of files)")),(0,r.kt)("h2",{id:"parallelize-test-examples-instead-of-files"},"Parallelize test examples (instead of files)"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/ruby/split-by-test-examples"},"Split by test examples"),"."),(0,r.kt)("h2",{id:"formatters-rspec_junit_formatter-json"},"Formatters (",(0,r.kt)("a",{parentName:"h2",href:"https://github.com/sj26/rspec_junit_formatter"},(0,r.kt)("inlineCode",{parentName:"a"},"rspec_junit_formatter")),", ",(0,r.kt)("a",{parentName:"h2",href:"https://relishapp.com/rspec/rspec-core/v/3-12/docs/formatters/json-formatter"},(0,r.kt)("inlineCode",{parentName:"a"},"json")),")"),(0,r.kt)("h3",{id:"regular-mode"},"Regular Mode"),(0,r.kt)("p",null,"Format stdout with the ",(0,r.kt)("inlineCode",{parentName:"p"},"documentation")," formatter and file output with the ",(0,r.kt)("inlineCode",{parentName:"p"},"RspecJunitFormatter")," formatter (you can use any RSpec supported formatter):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'bundle exec rake "knapsack_pro:rspec[--format documentation --format RspecJunitFormatter --out tmp/rspec.xml]"\n')),(0,r.kt)("h3",{id:"queue-mode"},"Queue Mode"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Refer to your CI docs for `$MY_CI_NODE_INDEX`\nexport KNAPSACK_PRO_CI_NODE_INDEX=$MY_CI_NODE_INDEX\n\nbundle exec rake "knapsack_pro:queue:rspec[--format documentation --format RspecJunitFormatter --out tmp/rspec_$KNAPSACK_PRO_CI_NODE_INDEX.xml]"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# spec_helper.rb or rails_helper.rb\n\n# `TMP_REPORT` must be the same path as `--out`\n# `TMP_REPORT` must be a full path (no `~`)\nTMP_REPORT = \"tmp/tmp_rspec_#{ENV['KNAPSACK_PRO_CI_NODE_INDEX']}.xml\"\nFINAL_REPORT = \"tmp/final_rspec_#{ENV['KNAPSACK_PRO_CI_NODE_INDEX']}.xml\"\n\nKnapsackPro::Hooks::Queue.after_subset_queue do |queue_id, subset_queue_id|\n  if File.exist?(TMP_REPORT)\n    FileUtils.mv(TMP_REPORT, FINAL_REPORT)\n  end\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FINAL_REPORT")," will contain all the tests run on the CI node (not just the last subset). For more information, you can read this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/KnapsackPro/knapsack_pro-ruby/issues/40"},"Github issue"),"."),(0,r.kt)("p",null,"If your CI nodes write to the same disk, you need to append the CI node index to the solution presented above to avoid conflicts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"TMP_REPORT = \"tmp/tmp_rspec_#{ENV['KNAPSACK_PRO_CI_NODE_INDEX']}.xml\"\nFINAL_REPORT = \"tmp/final_rspec_#{ENV['KNAPSACK_PRO_CI_NODE_INDEX']}.xml\"\n")),(0,r.kt)("p",null,"This applies also if you are running parallel test processes on each CI node (see our page on to integrate Knapsack Pro with ",(0,r.kt)("a",{parentName:"p",href:"/ruby/parallel_tests"},(0,r.kt)("inlineCode",{parentName:"a"},"parallel_tests"))," for an example)."),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"If you cannot find what you are looking for in this section, please refer to the Ruby ",(0,r.kt)("a",{parentName:"p",href:"/ruby/troubleshooting"},"troubleshooting page"),"."),(0,r.kt)("h3",{id:"some-of-my-test-files-are-not-executed"},"Some of my test files are not executed"),(0,r.kt)("p",null,"First, check if the RSpec output mentions any filtering like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Run options: include {:focus=>true, :ids=>{"./spec/example_spec.rb"=>["1:1:2"]}}\n')),(0,r.kt)("p",null,"Second, you may want to grep the codebase (including ",(0,r.kt)("inlineCode",{parentName:"p"},".rspec"),") for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--tag MY_TAG"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"-t MY_TAG")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fit"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"fdescribe"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"fcontext")),(0,r.kt)("li",{parentName:"ul"},"test examples or groups tagged with ",(0,r.kt)("inlineCode",{parentName:"li"},":focus"))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Do not use ",(0,r.kt)("inlineCode",{parentName:"p"},"run_all_when_everything_filtered"))),(0,r.kt)("p",null,"Make sure to use ",(0,r.kt)("a",{parentName:"p",href:"https://relishapp.com/rspec/rspec-core/v/3-12/docs/filtering/filter-run-when-matching"},(0,r.kt)("inlineCode",{parentName:"a"},"filter_run_when_matching"))," instead of the deprecated ",(0,r.kt)("a",{parentName:"p",href:"https://relishapp.com/rspec/rspec-core/v/2-3/docs/filtering/run-all-when-everything-filtered"},(0,r.kt)("inlineCode",{parentName:"a"},"run_all_when_everything_filtered")),". The latter may cause skipping some of your tests."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# \u26d4\ufe0f Bad\nRSpec.configure do |c|\n  c.filter_run :focus => true\n  c.run_all_when_everything_filtered = true\nend\n\n# \u2705 Good\nRSpec.configure do |c|\n  c.filter_run_when_matching :focus\nend\n\n# \ud83e\udd18 FYeah\nCI=true # Refer to your CI docs\n\nRSpec.configure do |c|\n  unless ENV['CI']\n    c.filter_run_when_matching :focus\n  end\nend\n")),(0,r.kt)("h3",{id:"some-tests-are-failing-in-queue-mode"},"Some tests are failing in Queue Mode"),(0,r.kt)("p",null,"Since Knapsack Pro ",(0,r.kt)("a",{parentName:"p",href:"/ruby/rspec/#rspec-is-ignored-in-queue-mode"},"ignores ",(0,r.kt)("inlineCode",{parentName:"a"},".rspec"))," and many projects use it to require ",(0,r.kt)("inlineCode",{parentName:"p"},"spec_helper.rb")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"rails_helper.rb"),", some tests may be falling. Make sure you either require the correct helper at the top of each test file or pass it as an argument:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'bundle exec rake "knapsack_pro:queue:rspec[--require rails_helper]"\n')),(0,r.kt)("p",null,"Also, please make sure you have explicitly set ",(0,r.kt)("inlineCode",{parentName:"p"},"RAILS_ENV=test")," on your CI nodes."),(0,r.kt)("h3",{id:"rspec-is-ignored-in-queue-mode"},(0,r.kt)("inlineCode",{parentName:"h3"},".rspec")," is ignored in Queue Mode"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".rspec")," file is ignored in Queue Mode because ",(0,r.kt)("inlineCode",{parentName:"p"},"knapsack_pro")," needs to pass arguments explicitly to ",(0,r.kt)("inlineCode",{parentName:"p"},"RSpec::Core::Runner"),". You can inline them with the ",(0,r.kt)("a",{parentName:"p",href:"/ruby/reference/#command-line-arguments"},"Rake argument syntax")," instead."),(0,r.kt)("h3",{id:"something-is-wrong-with-my-custom-formatter"},"Something is wrong with my custom formatter"),(0,r.kt)("p",null,"Try with ",(0,r.kt)("a",{parentName:"p",href:"/ruby/reference/#knapsack_pro_modify_default_rspec_formatters-rspec"},(0,r.kt)("inlineCode",{parentName:"a"},"KNAPSACK_PRO_MODIFY_DEFAULT_RSPEC_FORMATTERS=false")),"."),(0,r.kt)("h3",{id:"i-see-the-summary-of-failedpending-tests-multiple-times-in-queue-mode"},"I see the summary of failed/pending tests multiple times in Queue Mode"),(0,r.kt)("p",null,"It may happen if you use:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a custom RSpec formatter"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"knapsack_pro")," < 0.33.0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/KnapsackPro/knapsack_pro-ruby#knapsack_pro_modify_default_rspec_formatters-hide-duplicated-summary-of-pending-and-failed-tests"},(0,r.kt)("inlineCode",{parentName:"a"},"KNAPSACK_PRO_MODIFY_DEFAULT_RSPEC_FORMATTERS=false")))),(0,r.kt)("p",null,"This is due to the fact that Knapsack Pro in Queue Mode ",(0,r.kt)("a",{parentName:"p",href:"/overview/#queue-mode-dynamic-split"},"runs tests in batches"),", and RSpec accumulates failures/pending tests for all batches."),(0,r.kt)("h3",{id:"typeerror-superclass-mismatch-for-class-myclass-in-queue-mode"},(0,r.kt)("inlineCode",{parentName:"h3"},"TypeError: superclass mismatch for class MyClass")," in Queue Mode"),(0,r.kt)("p",null,"Probably, you are in the following situation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# spec/a_spec.rb\n\nclass BaseClassA\nend\n\nmodule Mock\n  module FakeModels\n    class MyClass < BaseClassA\n      def args\n      end\n    end\n  end\nend\n\ndescribe 'A test of something' do\n  it do\n  end\nend\n\n\n# spec/b_spec.rb\n\nclass BaseClassB\nend\n\nmodule Mock\n  module FakeModels\n    # \ud83d\udc47 Base class is different\n    class MyClass < BaseClassB\n      def args\n      end\n    end\n  end\nend\n\ndescribe 'B test of something' do\n  it do\n  end\nend\n")),(0,r.kt)("p",null,"Use RSpec's ",(0,r.kt)("a",{parentName:"p",href:"https://relishapp.com/rspec/rspec-mocks/docs/mutating-constants"},(0,r.kt)("inlineCode",{parentName:"a"},"stub_const"))," instead."),(0,r.kt)("h3",{id:"my-tests-fail-in-queue-mode"},"My tests fail in Queue Mode"),(0,r.kt)("p",null,"Knapsack Pro uses ",(0,r.kt)("a",{parentName:"p",href:"https://relishapp.com/rspec/rspec-core/docs/running-specs-multiple-times-with-different-runner-options-in-the-same-process"},(0,r.kt)("inlineCode",{parentName:"a"},"RSpec::Core::Runner"))," in Queue Mode to run tests without reloading Ruby/Rails for each batch of tests. If you monkey-patch RSpec or mutate its global state, the test runner may not be able to clean up properly after each batch."),(0,r.kt)("p",null,"Also, you can try to use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/KnapsackPro/knapsack_pro-ruby#knapsack-pro-binary"},(0,r.kt)("inlineCode",{parentName:"a"},"knapsack_pro")," binary")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"bundle exec rake knapsack_pro:rspec"),"."),(0,r.kt)("h2",{id:"related-faqs"},"Related FAQs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-use-junit-formatter"},"How to use junit formatter?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-use-json-formatter-for-rspec"},"How to use JSON formatter for RSpec?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-run-only-a-specific-set-of-test-files-in-rspec"},"How to run only a specific set of test files in RSpec (using tags or test file pattern)?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-split-tests-based-on-test-level-instead-of-test-file-level"},"How to split tests based on test level instead of test file level?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-run-only-rspec-feature-tests-or-non-feature-tests"},"How to run only RSpec feature tests or non feature tests?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/rspec-is-not-running-some-tests"},"RSpec is not running some tests")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-stop-running-tests-on-the-first-failed-test-fail-fast-tests-in-rspec"},"How to stop running tests on the first failed test (fail fast tests in RSpec)?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/why-when-i-use-queue-mode-for-rspec-then-rspec-config-is-ignored"},"Why when I use Queue Mode for RSpec then .rspec config is ignored?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/why-when-i-use-queue-mode-for-rspec-and-test-fails-then-i-see-multiple-times-info-about-failed-test-in-rspec-result"},"Why when I use Queue Mode for RSpec and test fails then I see multiple times info about failed test in RSpec result?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/why-when-i-use-queue-mode-for-rspec-then-i-see-multiple-times-the-same-pending-tests"},"Why when I use Queue Mode for RSpec then I see multiple times the same pending tests?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/why-when-i-use-queue-mode-for-rspec-then-factorybotfactorygirl-tests-fail"},"Why when I use Queue Mode for RSpec then FactoryBot/FactoryGirl tests fail?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/why-when-i-use-queue-mode-for-rspec-then-i-see-error-superclass-mismatch-for-class"},"Why when I use Queue Mode for RSpec then I see error superclass mismatch for class?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/how-to-retry-failed-tests-flaky-tests"},"How to retry failed tests (flaky tests)?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://knapsackpro.com/faq/question/why-when-i-use-queue-mode-for-rspec-then-my-tests-fail"},"Why when I use Queue Mode for RSpec then my tests fail?"))))}c.isMDXComponent=!0}}]);