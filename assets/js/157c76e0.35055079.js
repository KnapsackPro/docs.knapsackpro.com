"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[865],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),m=i(r),d=a,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||l;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var i=2;i<l;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294),a=r(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:r},t)}},4866:(e,t,r)=>{r.d(t,{Z:()=>_});var n=r(7462),a=r(7294),l=r(6010),o=r(2466),u=r(6550),c=r(1980),i=r(7392),s=r(12);function p(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function m(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??p(r);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const n=(0,u.k6)(),l=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,c._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function b(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,l=m(e),[o,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[c,i]=f({queryString:r,groupId:n}),[p,b]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,s.Nk)(r);return[n,(0,a.useCallback)((e=>{r&&l.set(e)}),[r,l])]}({groupId:n}),h=(()=>{const e=c??p;return d({value:e,tabValues:l})?e:null})();(0,a.useEffect)((()=>{h&&u(h)}),[h]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),b(e)}),[i,b,l]),tabValues:l}}var h=r(2389);const y="tabList__CuJ",g="tabItem_LNqP";function v(e){let{className:t,block:r,selectedValue:u,selectValue:c,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,r=s.indexOf(t),n=i[r].value;n!==u&&(p(t),c(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=s.indexOf(e.currentTarget)+1;t=s[r]??s[0];break}case"ArrowLeft":{const r=s.indexOf(e.currentTarget)-1;t=s[r]??s[s.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},t)},i.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>s.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",g,o?.className,{"tabs__item--active":u===t})}),r??t)})))}function E(e){let{lazy:t,children:r,selectedValue:n}=e;if(t){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=b(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",y)},a.createElement(v,(0,n.Z)({},e,t)),a.createElement(E,(0,n.Z)({},e,t)))}function _(e){const t=(0,h.Z)();return a.createElement(k,(0,n.Z)({key:String(t)},e))}},5735:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>u,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),l=r(4866),o=r(5162);const u={pagination_next:null,pagination_prev:null},c="Use Knapsack Pro with CircleCI",i={unversionedId:"ruby/circleci",id:"ruby/circleci",title:"Use Knapsack Pro with CircleCI",description:"Collect metadata in Queue Mode",source:"@site/docs/ruby/circleci.md",sourceDirName:"ruby",slug:"/ruby/circleci",permalink:"/ruby/circleci",draft:!1,editUrl:"https://github.com/KnapsackPro/docs.knapsackpro.com/tree/main/docusaurus/docs/ruby/circleci.md",tags:[],version:"current",frontMatter:{pagination_next:null,pagination_prev:null},sidebar:"sidebar"},s={},p=[{value:"Collect metadata in Queue Mode",id:"collect-metadata-in-queue-mode",level:2}],m={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-knapsack-pro-with-circleci"},"Use Knapsack Pro with CircleCI"),(0,a.kt)("h2",{id:"collect-metadata-in-queue-mode"},"Collect metadata in Queue Mode"),(0,a.kt)("p",null,"You may want to ",(0,a.kt)("a",{parentName:"p",href:"https://circleci.com/docs/2.0/collect-test-data/#metadata-collection-in-custom-test-steps"},"collect metadata")," in CircleCI. For example, to collect junit reports of your RSpec runs you would:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Configure the ",(0,a.kt)("a",{parentName:"li",href:"/ruby/rspec/#queue-mode"},"junit formatter for RSpec")),(0,a.kt)("li",{parentName:"ul"},"Copy the report to the ",(0,a.kt)("inlineCode",{parentName:"li"},"$CIRCLE_TEST_REPORTS")," directory as shown below")),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"RSpec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby",metastring:'title="spec_helper.rb or rails_helper.rb"',title:'"spec_helper.rb',or:!0,'rails_helper.rb"':!0},"# `TMP_REPORT` must be the same path as `--out`\n# `TMP_REPORT` must be a full path (no `~`)\nTMP_REPORT = \"tmp/tmp_rspec_#{ENV['KNAPSACK_PRO_CI_NODE_INDEX']}.xml\"\nFINAL_REPORT = \"tmp/final_rspec_#{ENV['KNAPSACK_PRO_CI_NODE_INDEX']}.xml\"\n\nKnapsackPro::Hooks::Queue.after_subset_queue do |queue_id, subset_queue_id|\n  if File.exist?(TMP_REPORT)\n    FileUtils.mv(TMP_REPORT, FINAL_REPORT)\n  end\nend\n\n# highlight-start\nKnapsackPro::Hooks::Queue.after_queue do |queue_id|\n  if File.exist?(FINAL_REPORT) && ENV['CIRCLE_TEST_REPORTS']\n    FileUtils.cp(FINAL_REPORT, \"#{ENV['CIRCLE_TEST_REPORTS']}/rspec.xml\")\n  end\nend\n# highlight-end\n"))),(0,a.kt)(o.Z,{value:"CircleCI",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".circleci/config.yml"',title:'".circleci/config.yml"'},'- run:\n    name: RSpec with Knapsack Pro in Queue Mode\n    command: |\n      export CIRCLE_TEST_REPORTS=/tmp/test-results\n      mkdir $CIRCLE_TEST_REPORTS\n      bundle exec rake "knapsack_pro:queue:rspec[--format documentation --format RspecJunitFormatter --out tmp/rspec.xml]"\n\n- store_test_results:\n    path: /tmp/test-results\n\n- store_artifacts:\n    path: /tmp/test-results\n    destination: test-results\n')))),(0,a.kt)("p",null,"You can find a complete CircleCI configuration in ",(0,a.kt)("a",{parentName:"p",href:"https://docs.knapsackpro.com/2021/rspec-testing-parallel-jobs-with-circleci-and-junit-xml-report"},"RSpec testing parallel jobs with CircleCI and JUnit XML report"),"."))}d.isMDXComponent=!0}}]);